# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import re
import os
import numpy as np
from PIL import Image
from keras.models import Sequential
from keras.layers import (
    Dense,
    MaxPooling2D,
    Conv2D,
    Dropout,
    BatchNormalization,
    Flatten,
)
from sklearn.model_selection import train_test_split
import cv2 as cv
from pathlib import Path
from tkinter import *
from tkinter import messagebox
import tkinter as tk

dictData = {}
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox


class signUpGUI(tk.Tk):
    def __init__(self):
        super().__init__()
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path("./assets2/frame0")

        def relative_to_assets(path: str) -> Path:
            return ASSETS_PATH / Path(path)

        self.geometry("973x639")
        self.configure(bg="#FFFFFF")

        canvas = Canvas(
            self,
            bg="#FFFFFF",
            height=639,
            width=973,
            bd=0,
            highlightthickness=0,
            relief="ridge",
        )

        canvas.place(x=0, y=0)
        image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(486.0, 319.0, image=image_image_1)

        entry_image_1 = PhotoImage(file=relative_to_assets("entry_1.png"))
        entry_bg_1 = canvas.create_image(709.5, 114.0, image=entry_image_1)
        entry_1 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0,
            font=("Times New Roman", int(15.0)),
        )
        entry_1.place(x=548.0, y=89.0, width=323.0, height=48.0)

        entry_image_2 = PhotoImage(file=relative_to_assets("entry_2.png"))
        entry_bg_2 = canvas.create_image(709.5, 209.0, image=entry_image_2)
        entry_2 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0,
            font=("Times New Roman", int(15.0)),
        )
        entry_2.place(x=548.0, y=184.0, width=323.0, height=48.0)

        entry_image_3 = PhotoImage(file=relative_to_assets("entry_3.png"))
        entry_bg_3 = canvas.create_image(709.5, 304.0, image=entry_image_3)
        entry_3 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0,
            font=("Times New Roman", int(15.0)),
        )
        entry_3.place(x=548.0, y=279.0, width=323.0, height=48.0)

        entry_image_4 = PhotoImage(file=relative_to_assets("entry_4.png"))
        entry_bg_4 = canvas.create_image(709.5, 399.0, image=entry_image_4)
        entry_4 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0,
            font=("Times New Roman", int(15.0)),
        )
        entry_4.place(x=548.0, y=374.0, width=323.0, height=48.0)

        entry_image_5 = PhotoImage(file=relative_to_assets("entry_5.png"))
        entry_bg_5 = canvas.create_image(709.5, 496.0, image=entry_image_5)
        entry_5 = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0,
            font=("Times New Roman", int(15.0)),
            show=".",
        )
        entry_5.place(x=548.0, y=471.0, width=323.0, height=48.0)

        canvas.create_text(
            546.0,
            64.0,
            anchor="nw",
            text="Họ và tên",
            fill="#000000",
            font=("TimesNewRomanPSMT", 18 * -1),
        )

        canvas.create_text(
            546.0,
            159.0,
            anchor="nw",
            text="Ngày sinh",
            fill="#000000",
            font=("TimesNewRomanPSMT", 18 * -1),
        )

        canvas.create_text(
            546.0,
            254.0,
            anchor="nw",
            text="Số điện thoại",
            fill="#000000",
            font=("TimesNewRomanPSMT", 18 * -1),
        )

        canvas.create_text(
            546.0,
            349.0,
            anchor="nw",
            text="Tài khoản",
            fill="#000000",
            font=("TimesNewRomanPSMT", 18 * -1),
        )

        canvas.create_text(
            546.0,
            446.0,
            anchor="nw",
            text="Mật khẩu",
            fill="#000000",
            font=("TimesNewRomanPSMT", 18 * -1),
        )

        image_image_2 = PhotoImage(file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(241.0, 304.0, image=image_image_2)

        
          
        def openCamera():
            with open("E:\\Code\\Python\\Doanreal\\Python\\cnn\\makeData.py", "r") as f:
                self.destroy()
                code = f.read()
            exec(code)
            return True

        def checkRegister():
            import validate

            name = entry_1.get()
            dob = entry_2.get()
            phoneNumber = entry_3.get()
            userName = entry_4.get()
            password = entry_5.get()
            if (
                validate.checkEmpty(name)
                or validate.checkEmpty(dob)
                or validate.checkEmpty(phoneNumber)
                or validate.checkEmpty(userName)
                or validate.checkEmpty(password)
            ):
                messagebox.showinfo("Lỗi", "Vui lòng nhập đầy đủ thông tin")
                return False
            if validate.checkName(name)==False:
                messagebox.showinfo("Lỗi", "Tên không hợp lệ")
                return False
            if validate.checkBirthday(dob)==False:
                messagebox.showinfo("Lỗi", "Ngày không hợp lệ")
                return False

            if validate.checkPhone(phoneNumber) == False:
                messagebox.showinfo("Lỗi", "Số điện thoại không hợp lệ")
                return False

            if validate.checkUserName(userName)==False:
                messagebox.showinfo("Lỗi", "Username không hợp lệ")
                return False
            if (validate.checkPassword (password))==False:
                messagebox.showinfo("Lỗi", "Password ít nhất 8 kí tự")
                return False
            messagebox.showinfo("Thành công", "Đăng ký thành công!")
            from database import userDAO

            if ( userDAO.insert(
                name,
                dob,
                phoneNumber,
                userName,
                password
            )):
                openCamera()
                messagebox.showinfo("Thành công", "Đăng ký thành công!")
            else :
                 messagebox.showerror("Lỗi", "Tên đăng nhập hoặc số điện thoại bị trùng")
        button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: checkRegister(),
            relief="flat",
            activebackground="#C7E7FE",
        )
        button_1.place(x=647.0, y=550.0, width=124.0, height=62.0)
        self.resizable(False, False)
        self.mainloop()


# a=signUpGUI()
